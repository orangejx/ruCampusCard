plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.node-gradle.node' version '7.0.1'
}

group = 'com.rucc'
version = 'v0.1.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)  // 改为Java 17
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // Core annotation support
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.8.8'
    // SpringDoc OpenAPI (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.8'
}

node {
    version = '18.18.0'
    npmVersion = '9.8.1'
    download = true
    nodeProjectDir = file("${project.projectDir}/frontend")
}

tasks.register('buildFrontend', com.github.gradle.node.npm.task.NpmTask) {
    dependsOn 'npm_install'
    args = ['run', 'build']

    inputs.dir('frontend/src')
    inputs.files('frontend/package.json', 'frontend/vite.config.js')
    outputs.dir('frontend/dist')
}

tasks.named('processResources') {
    dependsOn 'buildFrontend'

    doLast {
        // 确保前端构建输出被复制到Spring Boot静态资源目录
        copy {
            from "${project.projectDir}/frontend/dist"
            into "${project.buildDir}/resources/main/static"
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
